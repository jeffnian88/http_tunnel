
./a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x17b>
  400210:	78 38                	js     40024a <_init-0x16e>
  400212:	36                   	ss
  400213:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400218:	6f                   	outsl  %ds:(%rsi),(%dx)
  400219:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push   %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 12                	add    %dl,(%rdx)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    $0x0,%al
  40023e:	00 00                	add    %al,(%rax)
  400240:	14 00                	adc    $0x0,%al
  400242:	00 00                	add    %al,(%rax)
  400244:	03 00                	add    (%rax),%eax
  400246:	00 00                	add    %al,(%rax)
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push   %rbp
  40024b:	00 2b                	add    %ch,(%rbx)
  40024d:	82                   	(bad)  
  40024e:	dd 59 0c             	fstpl  0xc(%rcx)
  400251:	9b                   	fwait
  400252:	cc                   	int3   
  400253:	90                   	nop
  400254:	db 24 b6             	(bad)  (%rsi,%rsi,4)
  400257:	c9                   	leaveq 
  400258:	68 62 41 e3 5f       	pushq  $0x5fe34162
  40025d:	c0 ed 68             	shr    $0x68,%ch

Disassembly of section .hash:

0000000000400260 <.hash>:
  400260:	03 00                	add    (%rax),%eax
  400262:	00 00                	add    %al,(%rax)
  400264:	04 00                	add    $0x0,%al
  400266:	00 00                	add    %al,(%rax)
  400268:	02 00                	add    (%rax),%al
  40026a:	00 00                	add    %al,(%rax)
  40026c:	03 00                	add    (%rax),%eax
  40026e:	00 00                	add    %al,(%rax)
  400270:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000400288 <.gnu.hash>:
  400288:	01 00                	add    %eax,(%rax)
  40028a:	00 00                	add    %al,(%rax)
  40028c:	01 00                	add    %eax,(%rax)
  40028e:	00 00                	add    %al,(%rax)
  400290:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002a8 <.dynsym>:
	...
  4002c0:	1a 00                	sbb    (%rax),%al
  4002c2:	00 00                	add    %al,(%rax)
  4002c4:	12 00                	adc    (%rax),%al
	...
  4002d6:	00 00                	add    %al,(%rax)
  4002d8:	01 00                	add    %eax,(%rax)
  4002da:	00 00                	add    %al,(%rax)
  4002dc:	20 00                	and    %al,(%rax)
	...
  4002ee:	00 00                	add    %al,(%rax)
  4002f0:	21 00                	and    %eax,(%rax)
  4002f2:	00 00                	add    %al,(%rax)
  4002f4:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400308 <.dynstr>:
  400308:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40030b:	67 6d                	addr32 insl (%dx),%es:(%edi)
  40030d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40030e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40030f:	5f                   	pop    %rdi
  400310:	73 74                	jae    400386 <_init-0x32>
  400312:	61                   	(bad)  
  400313:	72 74                	jb     400389 <_init-0x2f>
  400315:	5f                   	pop    %rdi
  400316:	5f                   	pop    %rdi
  400317:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031b:	63 2e                	movslq (%rsi),%ebp
  40031d:	73 6f                	jae    40038e <_init-0x2a>
  40031f:	2e 36 00 70 72       	add    %dh,%cs:%ss:0x72(%rax)
  400324:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40032b:	6c                   	insb   (%dx),%es:(%rdi)
  40032c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400333:	72 74                	jb     4003a9 <_init-0xf>
  400335:	5f                   	pop    %rdi
  400336:	6d                   	insl   (%dx),%es:(%rdi)
  400337:	61                   	(bad)  
  400338:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40033f:	43 5f                	rex.XB pop    %r15
  400341:	32 2e                	xor    (%rsi),%ch
  400343:	32 2e                	xor    (%rsi),%ch
  400345:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400348 <.gnu.version>:
  400348:	00 00                	add    %al,(%rax)
  40034a:	02 00                	add    (%rax),%al
  40034c:	00 00                	add    %al,(%rax)
  40034e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400350 <.gnu.version_r>:
  400350:	01 00                	add    %eax,(%rax)
  400352:	01 00                	add    %eax,(%rax)
  400354:	10 00                	adc    %al,(%rax)
  400356:	00 00                	add    %al,(%rax)
  400358:	10 00                	adc    %al,(%rax)
  40035a:	00 00                	add    %al,(%rax)
  40035c:	00 00                	add    %al,(%rax)
  40035e:	00 00                	add    %al,(%rax)
  400360:	75 1a                	jne    40037c <_init-0x3c>
  400362:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400368:	33 00                	xor    (%rax),%eax
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400370 <.rela.dyn>:
  400370:	18 09                	sbb    %cl,(%rcx)
  400372:	60                   	(bad)  
  400373:	00 00                	add    %al,(%rax)
  400375:	00 00                	add    %al,(%rax)
  400377:	00 06                	add    %al,(%rsi)
  400379:	00 00                	add    %al,(%rax)
  40037b:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .rela.plt:

0000000000400388 <.rela.plt>:
  400388:	38 09                	cmp    %cl,(%rcx)
  40038a:	60                   	(bad)  
  40038b:	00 00                	add    %al,(%rax)
  40038d:	00 00                	add    %al,(%rax)
  40038f:	00 07                	add    %al,(%rdi)
  400391:	00 00                	add    %al,(%rax)
  400393:	00 01                	add    %al,(%rcx)
	...
  40039d:	00 00                	add    %al,(%rax)
  40039f:	00 40 09             	add    %al,0x9(%rax)
  4003a2:	60                   	(bad)  
  4003a3:	00 00                	add    %al,(%rax)
  4003a5:	00 00                	add    %al,(%rax)
  4003a7:	00 07                	add    %al,(%rdi)
  4003a9:	00 00                	add    %al,(%rax)
  4003ab:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

00000000004003b8 <_init>:
  4003b8:	48 83 ec 08          	sub    $0x8,%rsp
  4003bc:	e8 6b 00 00 00       	callq  40042c <call_gmon_start>
  4003c1:	e8 fa 00 00 00       	callq  4004c0 <frame_dummy>
  4003c6:	e8 85 02 00 00       	callq  400650 <__do_global_ctors_aux>
  4003cb:	48 83 c4 08          	add    $0x8,%rsp
  4003cf:	c3                   	retq   

Disassembly of section .plt:

00000000004003d0 <printf@plt-0x10>:
  4003d0:	ff 35 52 05 20 00    	pushq  0x200552(%rip)        # 600928 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 54 05 20 00    	jmpq   *0x200554(%rip)        # 600930 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003e0 <printf@plt>:
  4003e0:	ff 25 52 05 20 00    	jmpq   *0x200552(%rip)        # 600938 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003e6:	68 00 00 00 00       	pushq  $0x0
  4003eb:	e9 e0 ff ff ff       	jmpq   4003d0 <_init+0x18>

00000000004003f0 <__libc_start_main@plt>:
  4003f0:	ff 25 4a 05 20 00    	jmpq   *0x20054a(%rip)        # 600940 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003f6:	68 01 00 00 00       	pushq  $0x1
  4003fb:	e9 d0 ff ff ff       	jmpq   4003d0 <_init+0x18>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 b0 05 40 00 	mov    $0x4005b0,%r8
  400416:	48 c7 c1 c0 05 40 00 	mov    $0x4005c0,%rcx
  40041d:	48 c7 c7 e4 04 40 00 	mov    $0x4004e4,%rdi
  400424:	e8 c7 ff ff ff       	callq  4003f0 <__libc_start_main@plt>
  400429:	f4                   	hlt    
  40042a:	90                   	nop
  40042b:	90                   	nop

000000000040042c <call_gmon_start>:
  40042c:	48 83 ec 08          	sub    $0x8,%rsp
  400430:	48 8b 05 e1 04 20 00 	mov    0x2004e1(%rip),%rax        # 600918 <_DYNAMIC+0x1a0>
  400437:	48 85 c0             	test   %rax,%rax
  40043a:	74 02                	je     40043e <call_gmon_start+0x12>
  40043c:	ff d0                	callq  *%rax
  40043e:	48 83 c4 08          	add    $0x8,%rsp
  400442:	c3                   	retq   
  400443:	90                   	nop
  400444:	90                   	nop
  400445:	90                   	nop
  400446:	90                   	nop
  400447:	90                   	nop
  400448:	90                   	nop
  400449:	90                   	nop
  40044a:	90                   	nop
  40044b:	90                   	nop
  40044c:	90                   	nop
  40044d:	90                   	nop
  40044e:	90                   	nop
  40044f:	90                   	nop

0000000000400450 <__do_global_dtors_aux>:
  400450:	55                   	push   %rbp
  400451:	48 89 e5             	mov    %rsp,%rbp
  400454:	53                   	push   %rbx
  400455:	48 83 ec 08          	sub    $0x8,%rsp
  400459:	80 3d f8 04 20 00 00 	cmpb   $0x0,0x2004f8(%rip)        # 600958 <__bss_start>
  400460:	75 4b                	jne    4004ad <__do_global_dtors_aux+0x5d>
  400462:	bb 68 07 60 00       	mov    $0x600768,%ebx
  400467:	48 8b 05 f2 04 20 00 	mov    0x2004f2(%rip),%rax        # 600960 <dtor_idx.6343>
  40046e:	48 81 eb 60 07 60 00 	sub    $0x600760,%rbx
  400475:	48 c1 fb 03          	sar    $0x3,%rbx
  400479:	48 83 eb 01          	sub    $0x1,%rbx
  40047d:	48 39 d8             	cmp    %rbx,%rax
  400480:	73 24                	jae    4004a6 <__do_global_dtors_aux+0x56>
  400482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400488:	48 83 c0 01          	add    $0x1,%rax
  40048c:	48 89 05 cd 04 20 00 	mov    %rax,0x2004cd(%rip)        # 600960 <dtor_idx.6343>
  400493:	ff 14 c5 60 07 60 00 	callq  *0x600760(,%rax,8)
  40049a:	48 8b 05 bf 04 20 00 	mov    0x2004bf(%rip),%rax        # 600960 <dtor_idx.6343>
  4004a1:	48 39 d8             	cmp    %rbx,%rax
  4004a4:	72 e2                	jb     400488 <__do_global_dtors_aux+0x38>
  4004a6:	c6 05 ab 04 20 00 01 	movb   $0x1,0x2004ab(%rip)        # 600958 <__bss_start>
  4004ad:	48 83 c4 08          	add    $0x8,%rsp
  4004b1:	5b                   	pop    %rbx
  4004b2:	c9                   	leaveq 
  4004b3:	c3                   	retq   
  4004b4:	66 66 66 2e 0f 1f 84 	nopw   %cs:0x0(%rax,%rax,1)
  4004bb:	00 00 00 00 00 

00000000004004c0 <frame_dummy>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 83 3d a7 02 20 00 	cmpq   $0x0,0x2002a7(%rip)        # 600770 <__JCR_END__>
  4004c8:	00 
  4004c9:	48 89 e5             	mov    %rsp,%rbp
  4004cc:	74 12                	je     4004e0 <frame_dummy+0x20>
  4004ce:	b8 00 00 00 00       	mov    $0x0,%eax
  4004d3:	48 85 c0             	test   %rax,%rax
  4004d6:	74 08                	je     4004e0 <frame_dummy+0x20>
  4004d8:	bf 70 07 60 00       	mov    $0x600770,%edi
  4004dd:	c9                   	leaveq 
  4004de:	ff e0                	jmpq   *%rax
  4004e0:	c9                   	leaveq 
  4004e1:	c3                   	retq   
  4004e2:	90                   	nop
  4004e3:	90                   	nop

00000000004004e4 <main>:
  4004e4:	55                   	push   %rbp
  4004e5:	48 89 e5             	mov    %rsp,%rbp
  4004e8:	48 83 ec 10          	sub    $0x10,%rsp
  4004ec:	8b 0d 0e ff ff ff    	mov    -0xf2(%rip),%ecx        # 400400 <_start>
  4004f2:	b8 9c 06 40 00       	mov    $0x40069c,%eax
  4004f7:	ba 00 04 40 00       	mov    $0x400400,%edx
  4004fc:	89 ce                	mov    %ecx,%esi
  4004fe:	48 89 c7             	mov    %rax,%rdi
  400501:	b8 00 00 00 00       	mov    $0x0,%eax
  400506:	e8 d5 fe ff ff       	callq  4003e0 <printf@plt>
  40050b:	8b 0d 47 04 20 00    	mov    0x200447(%rip),%ecx        # 600958 <__bss_start>
  400511:	b8 9c 06 40 00       	mov    $0x40069c,%eax
  400516:	ba 58 09 60 00       	mov    $0x600958,%edx
  40051b:	89 ce                	mov    %ecx,%esi
  40051d:	48 89 c7             	mov    %rax,%rdi
  400520:	b8 00 00 00 00       	mov    $0x0,%eax
  400525:	e8 b6 fe ff ff       	callq  4003e0 <printf@plt>
  40052a:	8b 0d 48 04 20 00    	mov    0x200448(%rip),%ecx        # 600978 <_end>
  400530:	b8 9c 06 40 00       	mov    $0x40069c,%eax
  400535:	ba 78 09 60 00       	mov    $0x600978,%edx
  40053a:	89 ce                	mov    %ecx,%esi
  40053c:	48 89 c7             	mov    %rax,%rdi
  40053f:	b8 00 00 00 00       	mov    $0x0,%eax
  400544:	e8 97 fe ff ff       	callq  4003e0 <printf@plt>
  400549:	c7 05 19 04 20 00 01 	movl   $0x1,0x200419(%rip)        # 60096c <a>
  400550:	00 00 00 
  400553:	c7 05 13 04 20 00 02 	movl   $0x2,0x200413(%rip)        # 600970 <b>
  40055a:	00 00 00 
  40055d:	c7 05 0d 04 20 00 03 	movl   $0x3,0x20040d(%rip)        # 600974 <c>
  400564:	00 00 00 
  400567:	c7 05 f7 03 20 00 04 	movl   $0x4,0x2003f7(%rip)        # 600968 <d>
  40056e:	00 00 00 
  400571:	48 c7 45 f8 58 09 60 	movq   $0x600958,-0x8(%rbp)
  400578:	00 
  400579:	eb 1f                	jmp    40059a <main+0xb6>
  40057b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40057f:	8b 10                	mov    (%rax),%edx
  400581:	b8 a3 06 40 00       	mov    $0x4006a3,%eax
  400586:	89 d6                	mov    %edx,%esi
  400588:	48 89 c7             	mov    %rax,%rdi
  40058b:	b8 00 00 00 00       	mov    $0x0,%eax
  400590:	e8 4b fe ff ff       	callq  4003e0 <printf@plt>
  400595:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
  40059a:	48 81 7d f8 78 09 60 	cmpq   $0x600978,-0x8(%rbp)
  4005a1:	00 
  4005a2:	75 d7                	jne    40057b <main+0x97>
  4005a4:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a9:	c9                   	leaveq 
  4005aa:	c3                   	retq   
  4005ab:	90                   	nop
  4005ac:	90                   	nop
  4005ad:	90                   	nop
  4005ae:	90                   	nop
  4005af:	90                   	nop

00000000004005b0 <__libc_csu_fini>:
  4005b0:	f3 c3                	repz retq 
  4005b2:	66 66 66 66 66 2e 0f 	nopw   %cs:0x0(%rax,%rax,1)
  4005b9:	1f 84 00 00 00 00 00 

00000000004005c0 <__libc_csu_init>:
  4005c0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  4005c5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  4005ca:	48 8d 2d 7b 01 20 00 	lea    0x20017b(%rip),%rbp        # 60074c <__init_array_end>
  4005d1:	4c 8d 25 74 01 20 00 	lea    0x200174(%rip),%r12        # 60074c <__init_array_end>
  4005d8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4005dd:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4005e2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4005e7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4005ec:	48 83 ec 38          	sub    $0x38,%rsp
  4005f0:	4c 29 e5             	sub    %r12,%rbp
  4005f3:	41 89 fd             	mov    %edi,%r13d
  4005f6:	49 89 f6             	mov    %rsi,%r14
  4005f9:	48 c1 fd 03          	sar    $0x3,%rbp
  4005fd:	49 89 d7             	mov    %rdx,%r15
  400600:	e8 b3 fd ff ff       	callq  4003b8 <_init>
  400605:	48 85 ed             	test   %rbp,%rbp
  400608:	74 1c                	je     400626 <__libc_csu_init+0x66>
  40060a:	31 db                	xor    %ebx,%ebx
  40060c:	0f 1f 40 00          	nopl   0x0(%rax)
  400610:	4c 89 fa             	mov    %r15,%rdx
  400613:	4c 89 f6             	mov    %r14,%rsi
  400616:	44 89 ef             	mov    %r13d,%edi
  400619:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40061d:	48 83 c3 01          	add    $0x1,%rbx
  400621:	48 39 eb             	cmp    %rbp,%rbx
  400624:	72 ea                	jb     400610 <__libc_csu_init+0x50>
  400626:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40062b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400630:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400635:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40063a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40063f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400644:	48 83 c4 38          	add    $0x38,%rsp
  400648:	c3                   	retq   
  400649:	90                   	nop
  40064a:	90                   	nop
  40064b:	90                   	nop
  40064c:	90                   	nop
  40064d:	90                   	nop
  40064e:	90                   	nop
  40064f:	90                   	nop

0000000000400650 <__do_global_ctors_aux>:
  400650:	55                   	push   %rbp
  400651:	48 89 e5             	mov    %rsp,%rbp
  400654:	53                   	push   %rbx
  400655:	48 83 ec 08          	sub    $0x8,%rsp
  400659:	48 8b 05 f0 00 20 00 	mov    0x2000f0(%rip),%rax        # 600750 <__CTOR_LIST__>
  400660:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400664:	74 19                	je     40067f <__do_global_ctors_aux+0x2f>
  400666:	bb 50 07 60 00       	mov    $0x600750,%ebx
  40066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400670:	48 83 eb 08          	sub    $0x8,%rbx
  400674:	ff d0                	callq  *%rax
  400676:	48 8b 03             	mov    (%rbx),%rax
  400679:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40067d:	75 f1                	jne    400670 <__do_global_ctors_aux+0x20>
  40067f:	48 83 c4 08          	add    $0x8,%rsp
  400683:	5b                   	pop    %rbx
  400684:	c9                   	leaveq 
  400685:	c3                   	retq   
  400686:	90                   	nop
  400687:	90                   	nop

Disassembly of section .fini:

0000000000400688 <_fini>:
  400688:	48 83 ec 08          	sub    $0x8,%rsp
  40068c:	e8 bf fd ff ff       	callq  400450 <__do_global_dtors_aux>
  400691:	48 83 c4 08          	add    $0x8,%rsp
  400695:	c3                   	retq   

Disassembly of section .rodata:

0000000000400698 <_IO_stdin_used>:
  400698:	01 00                	add    %eax,(%rax)
  40069a:	02 00                	add    (%rax),%al
  40069c:	25 78 20 25 78       	and    $0x78252078,%eax
  4006a1:	0a 00                	or     (%rax),%al
  4006a3:	25                   	.byte 0x25
  4006a4:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

00000000004006a8 <.eh_frame_hdr>:
  4006a8:	01 1b                	add    %ebx,(%rbx)
  4006aa:	03 3b                	add    (%rbx),%edi
  4006ac:	24 00                	and    $0x0,%al
  4006ae:	00 00                	add    %al,(%rax)
  4006b0:	03 00                	add    (%rax),%eax
  4006b2:	00 00                	add    %al,(%rax)
  4006b4:	3c fe                	cmp    $0xfe,%al
  4006b6:	ff                   	(bad)  
  4006b7:	ff 40 00             	incl   0x0(%rax)
  4006ba:	00 00                	add    %al,(%rax)
  4006bc:	08 ff                	or     %bh,%bh
  4006be:	ff                   	(bad)  
  4006bf:	ff 60 00             	jmpq   *0x0(%rax)
  4006c2:	00 00                	add    %al,(%rax)
  4006c4:	18 ff                	sbb    %bh,%bh
  4006c6:	ff                   	(bad)  
  4006c7:	ff                   	(bad)  
  4006c8:	78 00                	js     4006ca <_IO_stdin_used+0x32>
	...

Disassembly of section .eh_frame:

00000000004006d0 <__FRAME_END__-0x78>:
  4006d0:	14 00                	adc    $0x0,%al
  4006d2:	00 00                	add    %al,(%rax)
  4006d4:	00 00                	add    %al,(%rax)
  4006d6:	00 00                	add    %al,(%rax)
  4006d8:	01 7a 52             	add    %edi,0x52(%rdx)
  4006db:	00 01                	add    %al,(%rcx)
  4006dd:	78 10                	js     4006ef <_IO_stdin_used+0x57>
  4006df:	01 1b                	add    %ebx,(%rbx)
  4006e1:	0c 07                	or     $0x7,%al
  4006e3:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  4006e9:	00 00                	add    %al,(%rax)
  4006eb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4006ee:	00 00                	add    %al,(%rax)
  4006f0:	f4                   	hlt    
  4006f1:	fd                   	std    
  4006f2:	ff                   	(bad)  
  4006f3:	ff c7                	inc    %edi
  4006f5:	00 00                	add    %al,(%rax)
  4006f7:	00 00                	add    %al,(%rax)
  4006f9:	41 0e                	rex.B (bad)  
  4006fb:	10 43 86             	adc    %al,-0x7a(%rbx)
  4006fe:	02 0d 06 00 00 00    	add    0x6(%rip),%cl        # 40070a <_IO_stdin_used+0x72>
  400704:	00 00                	add    %al,(%rax)
  400706:	00 00                	add    %al,(%rax)
  400708:	14 00                	adc    $0x0,%al
  40070a:	00 00                	add    %al,(%rax)
  40070c:	3c 00                	cmp    $0x0,%al
  40070e:	00 00                	add    %al,(%rax)
  400710:	a0 fe ff ff 02 00 00 	mov    0x2fffffe,%al
  400717:	00 00 
  400719:	00 00                	add    %al,(%rax)
  40071b:	00 00                	add    %al,(%rax)
  40071d:	00 00                	add    %al,(%rax)
  40071f:	00 24 00             	add    %ah,(%rax,%rax,1)
  400722:	00 00                	add    %al,(%rax)
  400724:	54                   	push   %rsp
  400725:	00 00                	add    %al,(%rax)
  400727:	00 98 fe ff ff 89    	add    %bl,-0x76000002(%rax)
  40072d:	00 00                	add    %al,(%rax)
  40072f:	00 00                	add    %al,(%rax)
  400731:	51                   	push   %rcx
  400732:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0dbe <_end+0xe3f0446>
  400738:	40                   	rex
  400739:	46 83 07 8f          	rex.RX addl   $0xffffffffffffff8f,(%rdi)
  40073d:	02 8e 03 8d 04 00    	add    0x48d03(%rsi),%cl
  400743:	00 00                	add    %al,(%rax)
  400745:	00 00                	add    %al,(%rax)
	...

0000000000400748 <__FRAME_END__>:
  400748:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000600750 <__CTOR_LIST__>:
  600750:	ff                   	(bad)  
  600751:	ff                   	(bad)  
  600752:	ff                   	(bad)  
  600753:	ff                   	(bad)  
  600754:	ff                   	(bad)  
  600755:	ff                   	(bad)  
  600756:	ff                   	(bad)  
  600757:	ff 00                	incl   (%rax)

0000000000600758 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000600760 <__DTOR_LIST__>:
  600760:	ff                   	(bad)  
  600761:	ff                   	(bad)  
  600762:	ff                   	(bad)  
  600763:	ff                   	(bad)  
  600764:	ff                   	(bad)  
  600765:	ff                   	(bad)  
  600766:	ff                   	(bad)  
  600767:	ff 00                	incl   (%rax)

0000000000600768 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600770 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600778 <_DYNAMIC>:
  600778:	01 00                	add    %eax,(%rax)
  60077a:	00 00                	add    %al,(%rax)
  60077c:	00 00                	add    %al,(%rax)
  60077e:	00 00                	add    %al,(%rax)
  600780:	10 00                	adc    %al,(%rax)
  600782:	00 00                	add    %al,(%rax)
  600784:	00 00                	add    %al,(%rax)
  600786:	00 00                	add    %al,(%rax)
  600788:	0c 00                	or     $0x0,%al
  60078a:	00 00                	add    %al,(%rax)
  60078c:	00 00                	add    %al,(%rax)
  60078e:	00 00                	add    %al,(%rax)
  600790:	b8 03 40 00 00       	mov    $0x4003,%eax
  600795:	00 00                	add    %al,(%rax)
  600797:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 60079d <_DYNAMIC+0x25>
  60079d:	00 00                	add    %al,(%rax)
  60079f:	00 88 06 40 00 00    	add    %cl,0x4006(%rax)
  6007a5:	00 00                	add    %al,(%rax)
  6007a7:	00 04 00             	add    %al,(%rax,%rax,1)
  6007aa:	00 00                	add    %al,(%rax)
  6007ac:	00 00                	add    %al,(%rax)
  6007ae:	00 00                	add    %al,(%rax)
  6007b0:	60                   	(bad)  
  6007b1:	02 40 00             	add    0x0(%rax),%al
  6007b4:	00 00                	add    %al,(%rax)
  6007b6:	00 00                	add    %al,(%rax)
  6007b8:	f5                   	cmc    
  6007b9:	fe                   	(bad)  
  6007ba:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6007bd:	00 00                	add    %al,(%rax)
  6007bf:	00 88 02 40 00 00    	add    %cl,0x4002(%rax)
  6007c5:	00 00                	add    %al,(%rax)
  6007c7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6007cd <_DYNAMIC+0x55>
  6007cd:	00 00                	add    %al,(%rax)
  6007cf:	00 08                	add    %cl,(%rax)
  6007d1:	03 40 00             	add    0x0(%rax),%eax
  6007d4:	00 00                	add    %al,(%rax)
  6007d6:	00 00                	add    %al,(%rax)
  6007d8:	06                   	(bad)  
  6007d9:	00 00                	add    %al,(%rax)
  6007db:	00 00                	add    %al,(%rax)
  6007dd:	00 00                	add    %al,(%rax)
  6007df:	00 a8 02 40 00 00    	add    %ch,0x4002(%rax)
  6007e5:	00 00                	add    %al,(%rax)
  6007e7:	00 0a                	add    %cl,(%rdx)
  6007e9:	00 00                	add    %al,(%rax)
  6007eb:	00 00                	add    %al,(%rax)
  6007ed:	00 00                	add    %al,(%rax)
  6007ef:	00 3f                	add    %bh,(%rdi)
  6007f1:	00 00                	add    %al,(%rax)
  6007f3:	00 00                	add    %al,(%rax)
  6007f5:	00 00                	add    %al,(%rax)
  6007f7:	00 0b                	add    %cl,(%rbx)
  6007f9:	00 00                	add    %al,(%rax)
  6007fb:	00 00                	add    %al,(%rax)
  6007fd:	00 00                	add    %al,(%rax)
  6007ff:	00 18                	add    %bl,(%rax)
  600801:	00 00                	add    %al,(%rax)
  600803:	00 00                	add    %al,(%rax)
  600805:	00 00                	add    %al,(%rax)
  600807:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 60080d <_DYNAMIC+0x95>
	...
  600815:	00 00                	add    %al,(%rax)
  600817:	00 03                	add    %al,(%rbx)
  600819:	00 00                	add    %al,(%rax)
  60081b:	00 00                	add    %al,(%rax)
  60081d:	00 00                	add    %al,(%rax)
  60081f:	00 20                	add    %ah,(%rax)
  600821:	09 60 00             	or     %esp,0x0(%rax)
  600824:	00 00                	add    %al,(%rax)
  600826:	00 00                	add    %al,(%rax)
  600828:	02 00                	add    (%rax),%al
  60082a:	00 00                	add    %al,(%rax)
  60082c:	00 00                	add    %al,(%rax)
  60082e:	00 00                	add    %al,(%rax)
  600830:	30 00                	xor    %al,(%rax)
  600832:	00 00                	add    %al,(%rax)
  600834:	00 00                	add    %al,(%rax)
  600836:	00 00                	add    %al,(%rax)
  600838:	14 00                	adc    $0x0,%al
  60083a:	00 00                	add    %al,(%rax)
  60083c:	00 00                	add    %al,(%rax)
  60083e:	00 00                	add    %al,(%rax)
  600840:	07                   	(bad)  
  600841:	00 00                	add    %al,(%rax)
  600843:	00 00                	add    %al,(%rax)
  600845:	00 00                	add    %al,(%rax)
  600847:	00 17                	add    %dl,(%rdi)
  600849:	00 00                	add    %al,(%rax)
  60084b:	00 00                	add    %al,(%rax)
  60084d:	00 00                	add    %al,(%rax)
  60084f:	00 88 03 40 00 00    	add    %cl,0x4003(%rax)
  600855:	00 00                	add    %al,(%rax)
  600857:	00 07                	add    %al,(%rdi)
  600859:	00 00                	add    %al,(%rax)
  60085b:	00 00                	add    %al,(%rax)
  60085d:	00 00                	add    %al,(%rax)
  60085f:	00 70 03             	add    %dh,0x3(%rax)
  600862:	40 00 00             	add    %al,(%rax)
  600865:	00 00                	add    %al,(%rax)
  600867:	00 08                	add    %cl,(%rax)
  600869:	00 00                	add    %al,(%rax)
  60086b:	00 00                	add    %al,(%rax)
  60086d:	00 00                	add    %al,(%rax)
  60086f:	00 18                	add    %bl,(%rax)
  600871:	00 00                	add    %al,(%rax)
  600873:	00 00                	add    %al,(%rax)
  600875:	00 00                	add    %al,(%rax)
  600877:	00 09                	add    %cl,(%rcx)
  600879:	00 00                	add    %al,(%rax)
  60087b:	00 00                	add    %al,(%rax)
  60087d:	00 00                	add    %al,(%rax)
  60087f:	00 18                	add    %bl,(%rax)
  600881:	00 00                	add    %al,(%rax)
  600883:	00 00                	add    %al,(%rax)
  600885:	00 00                	add    %al,(%rax)
  600887:	00 fe                	add    %bh,%dh
  600889:	ff                   	(bad)  
  60088a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  60088d:	00 00                	add    %al,(%rax)
  60088f:	00 50 03             	add    %dl,0x3(%rax)
  600892:	40 00 00             	add    %al,(%rax)
  600895:	00 00                	add    %al,(%rax)
  600897:	00 ff                	add    %bh,%bh
  600899:	ff                   	(bad)  
  60089a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  60089d:	00 00                	add    %al,(%rax)
  60089f:	00 01                	add    %al,(%rcx)
  6008a1:	00 00                	add    %al,(%rax)
  6008a3:	00 00                	add    %al,(%rax)
  6008a5:	00 00                	add    %al,(%rax)
  6008a7:	00 f0                	add    %dh,%al
  6008a9:	ff                   	(bad)  
  6008aa:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6008ad:	00 00                	add    %al,(%rax)
  6008af:	00 48 03             	add    %cl,0x3(%rax)
  6008b2:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600918 <.got>:
	...

Disassembly of section .got.plt:

0000000000600920 <_GLOBAL_OFFSET_TABLE_>:
  600920:	78 07                	js     600929 <_GLOBAL_OFFSET_TABLE_+0x9>
  600922:	60                   	(bad)  
	...
  600937:	00 e6                	add    %ah,%dh
  600939:	03 40 00             	add    0x0(%rax),%eax
  60093c:	00 00                	add    %al,(%rax)
  60093e:	00 00                	add    %al,(%rax)
  600940:	f6 03 40             	testb  $0x40,(%rbx)
  600943:	00 00                	add    %al,(%rax)
  600945:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000600948 <__data_start>:
	...

0000000000600950 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000600958 <completed.6341>:
	...

0000000000600960 <dtor_idx.6343>:
	...

0000000000600968 <d>:
  600968:	00 00                	add    %al,(%rax)
	...

000000000060096c <a>:
  60096c:	00 00                	add    %al,(%rax)
	...

0000000000600970 <b>:
  600970:	00 00                	add    %al,(%rax)
	...

0000000000600974 <c>:
  600974:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp    (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 34 2e 34 	imul   $0x342e3420,0x6e(%rcx),%esp
  10:	2e                   	cs
  11:	35 2d 31 30 29       	xor    $0x2930312d,%eax
  16:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  19:	34 2e                	xor    $0x2e,%al
  1b:	35 00 47 43 43       	xor    $0x43434700,%eax
  20:	3a 20                	cmp    (%rax),%ah
  22:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
  26:	69 61 6e 20 34 2e 34 	imul   $0x342e3420,0x6e(%rcx),%esp
  2d:	2e                   	cs
  2e:	35 2d 35 29 20       	xor    $0x2029352d,%eax
  33:	34 2e                	xor    $0x2e,%al
  35:	34 2e                	xor    $0x2e,%al
  37:	35                   	.byte 0x35
	...
